<?xml version="1.0"?>
<ESBMessagePipelineStorage xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <Id>efbd8bf2-91d9-4f73-a02f-215f02b1a73b</Id>
  <Version>c34ed715-6e0c-40f9-8f40-443420acecff</Version>
  <BusinessFlows />
  <Description />
  <Name>Process.Generate.999</Name>
  <IsSystemObject>false</IsSystemObject>
  <Category>General</Category>
  <IsEncrypted>true</IsEncrypted>
  <Path />
  <PipelineBlob>&lt;ESBMessagePipeline xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.neuronesb.com/pipelines/"&gt;&lt;Category&gt;General&lt;/Category&gt;&lt;Description i:nil="true" /&gt;&lt;GlobalProperties xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" /&gt;&lt;Name&gt;Process.Generate.999&lt;/Name&gt;&lt;Properties xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" /&gt;&lt;ReferencedAssemblies xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays"&gt;&lt;d2p1:string&gt;OopFactory.X12, Version=3.0.10.0, Culture=neutral, PublicKeyToken=24f1be617e479584&lt;/d2p1:string&gt;&lt;d2p1:string&gt;OopFactory.X12.Validation, Version=1.0.0.0, Culture=neutral, PublicKeyToken=24f1be617e479584&lt;/d2p1:string&gt;&lt;/ReferencedAssemblies&gt;&lt;Steps&gt;&lt;ESBMessagePipelineStep i:type="ExceptionPipelineStepOfESBMessagexAPWb1W4"&gt;&lt;Bindings xmlns:d4p1="http://schemas.datacontract.org/2004/07/Neuron.ComponentModel" /&gt;&lt;BreakPoint&gt;Disable&lt;/BreakPoint&gt;&lt;Disable&gt;false&lt;/Disable&gt;&lt;Name&gt;Exception&lt;/Name&gt;&lt;Uniquename /&gt;&lt;Catch&gt;&lt;Bindings xmlns:d5p1="http://schemas.datacontract.org/2004/07/Neuron.ComponentModel" /&gt;&lt;BreakPoint&gt;Disable&lt;/BreakPoint&gt;&lt;Disable&gt;false&lt;/Disable&gt;&lt;Name&gt;Group&lt;/Name&gt;&lt;Uniquename /&gt;&lt;Children&gt;&lt;ESBMessagePipelineStep xmlns:d6p1="http://schemas.neuronesb.com/pipelines/esb/" i:type="d6p1:EsbMessageCSharpCodePipelineStep"&gt;&lt;Bindings xmlns:d7p1="http://schemas.datacontract.org/2004/07/Neuron.ComponentModel" /&gt;&lt;BreakPoint&gt;Disable&lt;/BreakPoint&gt;&lt;Disable&gt;false&lt;/Disable&gt;&lt;Name&gt;Exception&lt;/Name&gt;&lt;Uniquename /&gt;&lt;BreakPointLines xmlns:d7p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" /&gt;&lt;Code&gt;context.Instance.TraceError("++++++++++ Process Generate 999 - !!!EXCEPTION!!! Step");

PipelineException parentEx = (PipelineException)context.Properties["PipelineException"];

context.Instance.TraceError("...!!!........Process Generate 999 - !!!EXCEPTION!!! Step - ERROR: " + parentEx.InnerException.Message);

context.Data.Text = "&amp;lt;Response&amp;gt;ERROR: " + parentEx.InnerException.Message + "&amp;lt;/Response&amp;gt;";&lt;/Code&gt;&lt;ReferencedAssemblies xmlns:d7p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays"&gt;&lt;d7p1:string&gt;Neuron&lt;/d7p1:string&gt;&lt;d7p1:string&gt;Neuron.Pipelines&lt;/d7p1:string&gt;&lt;d7p1:string&gt;Neuron.Esb&lt;/d7p1:string&gt;&lt;d7p1:string&gt;System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d7p1:string&gt;&lt;d7p1:string&gt;System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d7p1:string&gt;&lt;d7p1:string&gt;System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d7p1:string&gt;&lt;d7p1:string&gt;System.Xml.Linq, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d7p1:string&gt;&lt;d7p1:string&gt;System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d7p1:string&gt;&lt;d7p1:string&gt;System.Data.DataSetExtensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d7p1:string&gt;&lt;d7p1:string&gt;System.Runtime.Serialization, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d7p1:string&gt;&lt;d7p1:string&gt;System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d7p1:string&gt;&lt;d7p1:string&gt;Newtonsoft.Json, Version=8.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed&lt;/d7p1:string&gt;&lt;d7p1:string&gt;Microsoft.CSharp, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&lt;/d7p1:string&gt;&lt;/ReferencedAssemblies&gt;&lt;TypeName&gt;Typec31cc88e1bc4d1c9da192b561249c7&lt;/TypeName&gt;&lt;/ESBMessagePipelineStep&gt;&lt;/Children&gt;&lt;/Catch&gt;&lt;Finally&gt;&lt;Bindings xmlns:d5p1="http://schemas.datacontract.org/2004/07/Neuron.ComponentModel" /&gt;&lt;BreakPoint&gt;Disable&lt;/BreakPoint&gt;&lt;Disable&gt;false&lt;/Disable&gt;&lt;Name&gt;Group&lt;/Name&gt;&lt;Uniquename /&gt;&lt;Children /&gt;&lt;/Finally&gt;&lt;Try&gt;&lt;Bindings xmlns:d5p1="http://schemas.datacontract.org/2004/07/Neuron.ComponentModel" /&gt;&lt;BreakPoint&gt;Disable&lt;/BreakPoint&gt;&lt;Disable&gt;false&lt;/Disable&gt;&lt;Name&gt;Group&lt;/Name&gt;&lt;Uniquename /&gt;&lt;Children&gt;&lt;ESBMessagePipelineStep xmlns:d6p1="http://schemas.neuronesb.com/pipelines/esb/" i:type="d6p1:EsbMessageCSharpCodePipelineStep"&gt;&lt;Bindings xmlns:d7p1="http://schemas.datacontract.org/2004/07/Neuron.ComponentModel" /&gt;&lt;BreakPoint&gt;Disable&lt;/BreakPoint&gt;&lt;Disable&gt;false&lt;/Disable&gt;&lt;Name&gt;Configure Get Agreement&lt;/Name&gt;&lt;Uniquename /&gt;&lt;BreakPointLines xmlns:d7p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" /&gt;&lt;Code&gt;context.Instance.TraceInformation("++++++++++ Process Generate 999 - Configure Get Agreement Step - Start");
 
// create the message for stored procedure to get the agreement
XDocument doc = new XDocument(
new XElement("Execute", new XAttribute("sp", "sp_Agreement_Get"),
new XElement("Parameters", 
new XElement("Parameter", new XAttribute("name", "@senderinterchangeid"), 		new XAttribute("value", context.Properties["isa08"].ToString().Trim())),
new XElement("Parameter", new XAttribute("name", "@receiverinterchangeid"), 	new XAttribute("value", context.Properties["isa06"].ToString().Trim())),
new XElement("Parameter", new XAttribute("name", "@interchangeversion"), 		new XAttribute("value", context.Properties["isa12"].ToString().Trim())),
new XElement("Parameter", new XAttribute("name", "@transactiontype"), 			new XAttribute("value", "999")),
new XElement("Parameter", new XAttribute("name", "@direction"), 				new XAttribute("value", "Outbound")),
new XElement("Parameter", new XAttribute("name", "@applicationsenderid"), 		new XAttribute("value", context.Properties["gs03"].ToString().Trim())),
new XElement("Parameter", new XAttribute("name", "@applicationreceiverid"), 	new XAttribute("value", context.Properties["gs02"].ToString().Trim())),
new XElement("Parameter", new XAttribute("name", "@applicationversion"),		new XAttribute("value", context.Properties["gs08"].ToString().Trim())))));

context.Data.Text = doc.ToString();	&lt;/Code&gt;&lt;ReferencedAssemblies xmlns:d7p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays"&gt;&lt;d7p1:string&gt;Neuron&lt;/d7p1:string&gt;&lt;d7p1:string&gt;Neuron.Pipelines&lt;/d7p1:string&gt;&lt;d7p1:string&gt;Neuron.Esb&lt;/d7p1:string&gt;&lt;d7p1:string&gt;System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d7p1:string&gt;&lt;d7p1:string&gt;System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d7p1:string&gt;&lt;d7p1:string&gt;System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d7p1:string&gt;&lt;d7p1:string&gt;System.Xml.Linq, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d7p1:string&gt;&lt;d7p1:string&gt;System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d7p1:string&gt;&lt;d7p1:string&gt;System.Data.DataSetExtensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d7p1:string&gt;&lt;d7p1:string&gt;System.Runtime.Serialization, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d7p1:string&gt;&lt;d7p1:string&gt;System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d7p1:string&gt;&lt;d7p1:string&gt;Newtonsoft.Json, Version=8.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed&lt;/d7p1:string&gt;&lt;d7p1:string&gt;Microsoft.CSharp, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&lt;/d7p1:string&gt;&lt;/ReferencedAssemblies&gt;&lt;TypeName&gt;Type9ddf7dcf5cc4d1899a050e93d4e18b&lt;/TypeName&gt;&lt;/ESBMessagePipelineStep&gt;&lt;ESBMessagePipelineStep xmlns:d6p1="http://schemas.neuronesb.com/pipelines/esb/" i:type="d6p1:ExecuteAdapterPipelineStep"&gt;&lt;Bindings xmlns:d7p1="http://schemas.datacontract.org/2004/07/Neuron.ComponentModel" /&gt;&lt;BreakPoint&gt;Disable&lt;/BreakPoint&gt;&lt;Disable&gt;false&lt;/Disable&gt;&lt;Name&gt;Get Agreement&lt;/Name&gt;&lt;Uniquename /&gt;&lt;d6p1:AdapterName&gt;AEP.SQL.EDI.Agreement.Get&lt;/d6p1:AdapterName&gt;&lt;d6p1:Timeout&gt;PT1M&lt;/d6p1:Timeout&gt;&lt;/ESBMessagePipelineStep&gt;&lt;ESBMessagePipelineStep xmlns:d6p1="http://schemas.neuronesb.com/pipelines/esb/" i:type="d6p1:EsbMessageCSharpCodePipelineStep"&gt;&lt;Bindings xmlns:d7p1="http://schemas.datacontract.org/2004/07/Neuron.ComponentModel" /&gt;&lt;BreakPoint&gt;Disable&lt;/BreakPoint&gt;&lt;Disable&gt;false&lt;/Disable&gt;&lt;Name&gt;Generate 999&lt;/Name&gt;&lt;Uniquename&gt;900ffe18-c1ef-48f4-b373-1b0ad4090e14&lt;/Uniquename&gt;&lt;BreakPointLines xmlns:d7p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" /&gt;&lt;Code&gt;context.Instance.TraceInformation("++++++++++ Process Generate 999 - Generate 999 Step - Start");

// Agreement To XML
XDocument doc = context.Data.ToXDocument();

// Restore X12
context.Data.Text = context.Properties["x12"].ToString();

// Create memory stream
var service = new OopFactory.X12.Validation.X12AcknowledgmentService();
byte[] byteArray = System.Text.Encoding.ASCII.GetBytes(context.Data.Text);
System.IO.MemoryStream stream = new System.IO.MemoryStream(byteArray);  

// Create 999 object
var responses = service.AcknowledgeTransactions(stream);

// Set interchange envelope values
var interchange = new OopFactory.X12.Parsing.Model.Interchange(DateTime.Now, 
															   int.Parse((from x in doc.Root.Descendants("Column") where (string)x.Attribute("name") == "ISA13InterchangeControlNumber"	select (string)x).SingleOrDefault().ToString()), 
															   true);

interchange.AuthorInfoQualifier 			= 	(from x in doc.Root.Descendants("Column") where (string)x.Attribute("name") == "ISA01AuthorizationInformationQualifier" 	select (string)x).SingleOrDefault().ToString(); 
interchange.AuthorInfo 						= 	(from x in doc.Root.Descendants("Column") where (string)x.Attribute("name") == "ISA02AuthorizationInformation" 				select (string)x).SingleOrDefault().ToString();
interchange.SecurityInfoQualifier 			= 	(from x in doc.Root.Descendants("Column") where (string)x.Attribute("name") == "ISA03SecurityInformationQualifier" 			select (string)x).SingleOrDefault().ToString();
interchange.SecurityInfo 					= 	(from x in doc.Root.Descendants("Column") where (string)x.Attribute("name") == "ISA04SecurityInformation" 					select (string)x).SingleOrDefault().ToString();
interchange.InterchangeSenderIdQualifier 	= 	(from x in doc.Root.Descendants("Column") where (string)x.Attribute("name") == "ISA05SenderInterchangeIDQualifier" 			select (string)x).SingleOrDefault().ToString();
interchange.InterchangeSenderId 			= 	(from x in doc.Root.Descendants("Column") where (string)x.Attribute("name") == "ISA06SenderInterchangeID" 					select (string)x).SingleOrDefault().ToString();
interchange.InterchangeReceiverIdQualifier 	= 	(from x in doc.Root.Descendants("Column") where (string)x.Attribute("name") == "ISA07ReceiverInterchangeIDQualifier" 		select (string)x).SingleOrDefault().ToString();
interchange.InterchangeReceiverId 			= 	(from x in doc.Root.Descendants("Column") where (string)x.Attribute("name") == "ISA08ReceiverInterchangeID" 				select (string)x).SingleOrDefault().ToString();

// Set Group envelope values
var group = interchange.AddFunctionGroup((from x in doc.Root.Descendants("Column") where (string)x.Attribute("name") == "GS01FunctionalIDCode" select (string)x).SingleOrDefault().ToString(), 
	                                     DateTime.Now, 
	                                     int.Parse((from x in doc.Root.Descendants("Column") where (string)x.Attribute("name") == "GS06GroupControlNumber" select (string)x).SingleOrDefault().ToString()));

group.ApplicationSendersCode = 		(from x in doc.Root.Descendants("Column") where (string)x.Attribute("name") == "GS02ApplicationSenderID" 			select (string)x).SingleOrDefault().ToString();
group.ApplicationReceiversCode = 	(from x in doc.Root.Descendants("Column") where (string)x.Attribute("name") == "GS03ApplicationReceiverID" 			select (string)x).SingleOrDefault().ToString();
group.VersionIdentifierCode = 		(from x in doc.Root.Descendants("Column") where (string)x.Attribute("name") == "GS08VersionReleaseIndustryIDCode" 	select (string)x).SingleOrDefault().ToString();

// Create 999
OopFactory.X12.Validation.X12Extensions.Add999Transaction(group, responses);
context.Data.Text = interchange.SerializeToX12(true);&lt;/Code&gt;&lt;ReferencedAssemblies xmlns:d7p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays"&gt;&lt;d7p1:string&gt;Neuron&lt;/d7p1:string&gt;&lt;d7p1:string&gt;Neuron.Pipelines&lt;/d7p1:string&gt;&lt;d7p1:string&gt;Neuron.Esb&lt;/d7p1:string&gt;&lt;d7p1:string&gt;System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d7p1:string&gt;&lt;d7p1:string&gt;System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d7p1:string&gt;&lt;d7p1:string&gt;System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d7p1:string&gt;&lt;d7p1:string&gt;System.Xml.Linq, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d7p1:string&gt;&lt;d7p1:string&gt;System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d7p1:string&gt;&lt;d7p1:string&gt;System.Data.DataSetExtensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d7p1:string&gt;&lt;d7p1:string&gt;System.Runtime.Serialization, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d7p1:string&gt;&lt;d7p1:string&gt;System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&lt;/d7p1:string&gt;&lt;/ReferencedAssemblies&gt;&lt;TypeName&gt;Type4123e2fefed4562bf2bf7ca0869996&lt;/TypeName&gt;&lt;/ESBMessagePipelineStep&gt;&lt;ESBMessagePipelineStep xmlns:d6p1="http://schemas.neuronesb.com/pipelines/esb/" i:type="d6p1:EsbMessageAuditPipelineStep"&gt;&lt;Bindings xmlns:d7p1="http://schemas.datacontract.org/2004/07/Neuron.ComponentModel" /&gt;&lt;BreakPoint&gt;Disable&lt;/BreakPoint&gt;&lt;Disable&gt;false&lt;/Disable&gt;&lt;Name&gt;Audit 999&lt;/Name&gt;&lt;Uniquename /&gt;&lt;d6p1:Action&gt;Send&lt;/d6p1:Action&gt;&lt;d6p1:FailureDetail i:nil="true" /&gt;&lt;d6p1:FailureType i:nil="true" /&gt;&lt;d6p1:IncludeBody&gt;true&lt;/d6p1:IncludeBody&gt;&lt;d6p1:IncludeMsgProps&gt;true&lt;/d6p1:IncludeMsgProps&gt;&lt;d6p1:XPath i:nil="true" /&gt;&lt;/ESBMessagePipelineStep&gt;&lt;/Children&gt;&lt;/Try&gt;&lt;/ESBMessagePipelineStep&gt;&lt;/Steps&gt;&lt;/ESBMessagePipeline&gt;</PipelineBlob>
</ESBMessagePipelineStorage>